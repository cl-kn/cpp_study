/** コンストラクタ【オブジェクトの未初期化状態を防止しろ！】
 * site https://monozukuri-c.com/langcpp-constructor/
 * date 12/08
 *
*/

class POS
{
public:
    int x;
    int y;

    POS(void);               //コンストラクタのプロトタイプ宣言
    POS(int tmpx, int tmpy); //引数ありコンストラクタ
};

// メンバ関数定義
//コンストラクタの関数定義 「クラス名、関数名が同一 戻り値の型指定×」
POS::POS(void)
{
    x = 0;
    y = 0;
}

POS::POS(int tmpx, int tmpy)
{
    x = tmpx;
    x = tmpy;
}

int main()
{
    POS pos1;
    POS pos2(100, 200);
    POS pos3 = {300, 400};
    POS pos4[2] = {{500, 600}, {700, 800}};

    return 0;
}

/**「コンストラクタ ・・・強制力のある初期化機構」
 *
 * ～～コンストラクタを使用する理由～～
 * 例（C言語）
 *
 * int main () {
 *  POS pos = {0,0};
 *  printPos(&pos);
 *
 *  return 0;
 * }
 * 上記コードでは、構造体変数に初期値を与えているが、この作業は変数を作り出したmain関数側の責務、となっている。
 * その為、main関数側が個の責務を放棄すれば、変数は不定値を持った状態で生成される可能性がある＝＝制約がない
 * ※C言語では、未初期化である可能性を排除する方法がない※
 *
 * ・コンストラクタはオブジェクト生成時に自動呼び出しされる
 * ・オブジェクトを使う側の都合とは関係なく、初期化を強制できる！
 *
 *
 *
*/