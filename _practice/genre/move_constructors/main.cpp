//***************************************************
/** 21/4/14
 * 「ムーブコンストラクター」「メモリ管理権限の移譲」について
*/
//***************************************************

#include <iostream>
#include <string>

int main(void)
{

    return 0;
}

/**
 * 「メモリ管理権限の移譲」
 *
 * 右辺値参照が期待する実装…左辺値に右辺値を代入後は、右辺値の役目が終わる場合
 *
 * 【コード例】
 * void swap(CMyClass & a, CMyClass & b) {
 *  CMyClass temp = a;
 *  a = b;
 *  b = temp;
 * }
 *
 *  上記コードでは、値を交換するだけの為に、一時的temp変数と、代入演算子を3回使用している。
 *   メモリをわざわざ複製している！！
 *
 * 【コード書き換え】
 * void swap (CMyClass & a, CMyClass & b) {
 *  CMyClass temp = std::move(a);
 *  a = std::move(b);
 *  b = std::move(temp);
 * }
 *
 * ・関数の引数は参照のまま ※交換後もそのまま使用する為
 * ・一時格納変数 temp を定義し、右辺値参照を明示して a を代入
 * ・ここで、右辺値参照を使って代入したことで、右辺の a の値は temp 移動後には使用しないことが自明である
 * ・同様に、a に右辺値参照の b を代入しているので、右辺の b の値は、代入後は使用しない
 *
 *
*/